generator client {
  provider = "prisma-client-js"
  seed     = "prisma/seed.ts"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TipoCatraca {
  ENTRADA
  SAIDA
}

enum StatusMensalidade {
  PENDENTE
  PAGO
  CANCELADO
}

enum FormPagamento {
  DINHEIRO
  CARTAO
  PIX
  GRATIS
}

model Cliente {
  id             Int              @id @default(autoincrement())
  nome           String
  email          String           @unique
  telefone       String?
  catracaId      String?          @map("catraca_id")
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  Mensalidade    Mensalidade[]
  RegistroAcesso RegistroAcesso[]
  LogSistema     LogSistema[]

  @@map("clientes")
}

model Usuario {
  id         Int          @id @default(autoincrement())
  nome       String
  email      String       @unique
  senha      String
  createdAt  DateTime     @default(now()) @map("created_at")
  updatedAt  DateTime     @updatedAt @map("updated_at")
  ativo      Boolean      @default(true)
  LogSistema LogSistema[]

  @@map("usuarios")
}

model Mensalidade {
  id             Int               @id @default(autoincrement())
  clienteId      Int               @map("cliente_id")
  valor          Float
  vencimento     DateTime
  status         StatusMensalidade @default(PENDENTE)
  formaPagamento FormPagamento?    @map("forma_pagamento")
  createdAt      DateTime          @default(now()) @map("created_at")
  updatedAt      DateTime          @updatedAt @map("updated_at")

  cliente Cliente @relation(fields: [clienteId], references: [id])

  @@map("mensalidades")
}

model RegistroAcesso {
  id             Int            @id @default(autoincrement())
  clienteId      Int            @map("cliente_id")
  tipoCatraca    TipoCatraca    @map("tipo_catraca")
  dataHora       DateTime       @default(now()) @map("data_hora")
  valorPago      Float?         @map("valor_pago")
  formaPagamento FormPagamento? @map("forma_pagamento")
  createdAt      DateTime       @default(now()) @map("created_at")
  updatedAt      DateTime       @updatedAt @map("updated_at")

  cliente Cliente @relation(fields: [clienteId], references: [id])

  @@map("registros_acesso")
}

model LogSistema {
  id        Int    @id @default(autoincrement())
  usuarioId Int    @map("usuario_id")
  acao      String
  clienteId Int?   @map("cliente_id")

  dataHora DateTime @default(now()) @map("data_hora")

  usuario Usuario  @relation(fields: [usuarioId], references: [id])
  cliente Cliente? @relation(fields: [clienteId], references: [id])

  @@map("logs_sistema")
}
